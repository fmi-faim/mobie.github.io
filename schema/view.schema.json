{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/mobie/mobie.github.io/master/schema/view.schema.json",
    "title": "MoBIEViewSchema",
    "description": "Schema for serializing the MoBIE viewer state",
    "definitions": {

        "name": {
            "type": "string",
            "pattern": "^[^;\\/ ]+$"
        },

        "imageDisplay": {
            "description": "",
            "type": "object",
            "properties": {
                "imageDisplay": {
                    "description": "Viewer state for a group of image sources.",
                    "type": "object",
                    "properties": {
                        "color": {
                            "description": "The color map.",
                            "type": "string",
                            "oneOf": [
                                {"pattern": "^r=(\\d+),g=(\\d+),b=(\\d+),a=(\\d+)$"},
                                {"enum": ["black", "blue", "cyan", "darkGray", "randomFromGlasbey", "gray", "green", "lightGray", "magenta", "orange", "pink", "red", "white", "yellow"]}
                            ]
                        },
                        "contrastLimits": {
                            "description": "The contrast limits.",
                            "type": "array",
                            "items": [
                                {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 65535
                                },
                                {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 65535
                                }
                            ],
                            "additionalItems": false
                        },
                        "name": {
                            "description": "Name of this image display.",
                            "$ref": "#/definitions/name"
                        },
                        "opacity": {
                            "description": "The alpha value used for blending segmentation and image data in the viewer.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        "blendingMode": {
                            "description": "The mode for blending multiple image sources.",
                            "type": "string",
                            "enum": ["average", "averageOccluding", "sum", "sumOccluding"]
                        },
                        "resolution3dView": {
                            "description": "The resolution used for the 3d viewer, in physical units. Only relevant if 'showImageIn3d' is true. Will be determined automatically if not specified.",
                            "type": "array",
                            "items": {
                                "type": "number",
                                "exclusiveMinimum": 0
                            },
                            "minItems": 3,
                            "maxItems": 3
                        },
                        "showImagesIn3d": {
                            "description": "Whether to show the images in the 3d viewer.",
                            "type": "boolean"
                        },
                        "sources": {
                            "description": "The image sources that are part of this display group. Multiple sources should be moved apart spatially with source transform(s), e.g. grid, otherwise they will not be correctly displayed in the viewer.",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[^,\\/ ]+$"
                            },
                            "minItems": 1
                        }
                    },
                    "required": ["color", "contrastLimits", "opacity", "name", "sources"],
                    "additionalProperties": false
                }
            },
            "required": ["imageDisplay"],
            "additionalProperties": false
        },

        "segmentationDisplay": {
            "description": "Viewer state for a group of segmentation sources.",
            "type": "object",
            "properties": {
                "segmentationDisplay": {
                    "description": "",
                    "type": "object",
                    "properties": {
                        "opacity": {
                            "description": "The alpha value used for blending segmentation and image data in the viewer.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        },
                        "lut": {
                            "description": "The segmentation look-up-table for the segmentation coloring.",
                            "type": "string",
                            "enum": ["argbColumn", "blueWhiteRed", "glasbey", "glasbeyZeroTransparent", "viridis"]
                        },
                        "colorByColumn": {
                            "description": "Name of table column that is used for coloring. By default the 'label_id' column is used.",
                            "$ref": "#/definitions/name"
                        },
                        "resolution3dView": {
                            "description": "Resolution used for the 3d viewer, in physical units. Only relevant if 'showSelectedSegmentsIn3d' is true. Will be determined automatically if not specified.",
                            "type": "array",
                            "items": {
                                "type": "number",
                                "exclusiveMinimum": 0
                            },
                            "minItems": 3,
                            "maxItems": 3
                        },
                        "name": {
                            "description": "Name of this segmentation display.",
                            "$ref": "#/definitions/name"
                        },
                        "scatterPlotAxes": {
                            "description": "The names of columns which should be used for the scatter plot.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/name"
                            },
                            "maxItems": 2,
                            "minItems": 2
                        },
                        "selectedSegmentIds": {
                            "description": "List of selected segment ids.",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[^; \\/]+;\\d+;\\d+$"
                            }
                        },
                        "showScatterPlot": {
                            "description": "Whether to show the scatter plot. The default is 'false', i.e. if this property is not present the scatter plot should not be shown.",
                            "type": "boolean"
                        },
                        "showSelectedSegmentsIn3d": {
                            "description": "Whether to show the selected segments in the 3d viewer.",
                            "type": "boolean"
                        },
                        "sources": {
                            "description": "The segmentation sources that are part of this display group. Multiple sources should be moved apart spatially with source transform(s), e.g. grid, otherwise they will not be correctly displayed in the viewer.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/name"
                            },
                            "minItems": 1
                        },
                        "tables": {
                            "description": "The tables to be loaded for this view. This must include the default table as the first item.",
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "^[^;\\/ ]+\\.csv$"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "^[^;\\/ ]+\\.tsv$"
                                    }
                                ]
                            },
                            "minItems": 1
                        },
                        "valueLimits": {
                            "description": "Value limits for numerical color maps like 'blueWhiteRed'.",
                            "type": "array",
                            "items": [
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "additionalItems": false
                        }
                    },
                    "required": ["opacity", "lut", "name", "sources"],
                    "additionalProperties": false
                }
            },
            "required": ["segmentationDisplay"],
            "additionalProperties": false
        },

        "affine": {
            "description": "",
            "type": "object",
            "properties": {
                "affine": {
                    "description": "Affine transformation applied to a list of sources.",
                    "type": "object",
                    "properties": {
                        "parameters": {
                            "description": "Parameters of the affine transformation, using the BigDataViewer convention.",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 12,
                            "maxItems": 12
                        },
                        "sources": {
                            "description": "The sources this transformation is applied to.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/name"
                            },
                            "minItems": 1
                        },
                        "names": {
                            "description": "Optional names the sources after transformation. If given, must have the same number of elements as `sources`.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/name"
                            },
                            "minItems": 1
                        },
                        "timepoints": {
                            "description": "The valid timepoints for this transformation. If none is given, the transformation is valid for all timepoints.",
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "minItems": 1
                        }
                    },
                    "required": ["parameters", "sources"],
                    "additionalProperties": false
                }
            },
            "required": ["affine"],
            "additionalProperties": false
        },

        "crop": {
            "description": "",
            "type": "object",
            "properties": {
                "crop": {
                    "description": "Crop transformation applied to a list of sources.",
                    "type": "object",
                    "properties": {
                        "min": {
                            "description": "Minimum coordinates for the crop.",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 3,
                            "maxItems": 3
                        },
                        "max": {
                            "description": "Maximum coordinates for the crop.",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 3,
                            "maxItems": 3
                        },
                        "sources": {
                            "description": "The sources this transformation is applied to.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/name"
                            },
                            "minItems": 1
                        },
                        "names": {
                            "description": "Optional names the sources after transformation. If given, must have the same number of elements as `sources`.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/name"
                            },
                            "minItems": 1
                        },
                        "timepoints": {
                            "description": "The valid timepoints for this transformation. If none is given, the transformation is valid for all timepoints.",
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "minItems": 1
                        },
                        "shiftToOrigin": {
                            "description": "Whether to shift the source to the coordinate space origin after applying the crop. By default true.",
                            "type": "boolean"
                        }
                    },
                    "required": ["min", "max", "sources"],
                    "additionalProperties": false
                }
            },
            "required": ["crop"],
            "additionalProperties": false
        },

        "grid": {
            "description": "",
            "type": "object",
            "properties": {
                "grid": {
                    "description": "Arrange multiple sources in a grid by offseting sources with a grid spacing.",
                    "type": "object",
                    "properties": {
                        "positions": {
                            "description": "Grid positions for the sources. If not specified, the sources will be arranged in a square grid. If given, must have the same length as `sources`.",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "maxItems": 2,
                                    "minItems": 2
                                }
                            }
                        },
                        "sources": {
                            "description": "The sources for the grid. The outer list specifies the grid posititions, the inner list the sources per grid position.",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "^[^,\\/ ]+$"
                                },
                                "minItems": 1
                            },
                            "minItems": 2
                        },
                        "names": {
                            "description": "Optional names the sources after transformation. If given, must have the same number of elements as `sources`.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/name"
                            },
                            "minItems": 1
                        },
                        "tableData": {
                            "$ref": "http://raw.githubusercontent.com/mobie/mobie.github.io/master/schema/source.schema.json#/definitions/tableData"
                        },
                        "tables": {
                            "description": "The tables to be loaded for this grid view. This must include the default table as the first item.",
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "^[^;\\/ ]+\\.csv$"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "^[^;\\/ ]+\\.tsv$"
                                    }
                                ]
                            },
                            "minItems": 1
                        },
                        "timepoints": {
                            "description": "The valid timepoints for this transformation. If none is given, the transformation is valid for all timepoints.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "minItems": 1
                        }
                    },
                    "required": ["sources", "tableData"],
                    "additionalProperties": false
                }
            },
            "required": ["grid"],
            "additionalProperties": false
        }
    },

    "type": "object",
    "properties": {
        "uiSelectionGroup": {
            "description": "Name of the UI from which this view can be selected.",
            "$ref": "#/definitions/name"
        },
        "isExclusive": {
            "type": "boolean",
            "description": "Does this view replace the current viewer state (exclusive) or is it added to it (additive)?"
        },
        "description": {
            "type": "string",
            "description": "Free text description of this view."
        },
        "sourceDisplays": {
            "description": "The display groups of this view.",
            "type": "array",
            "items": {"anyOf": [
                {"$ref": "#/definitions/imageDisplay"},
                {"$ref": "#/definitions/segmentationDisplay"}
            ]}
        },
        "sourceTransforms": {
            "description": "The source transformations of this view. The transformations must be defined in the physical coordinate space and are applied in addition to the transformations given in the bdv.xml.",
            "type": "array",
            "items": {"anyOf": [
                {"$ref": "#/definitions/affine"},
                {"$ref": "#/definitions/grid"},
                {"$ref": "#/definitions/crop"}
            ]}
        },
        "viewerTransform": {
            "description": "The viewer transformation of this view.",
            "type": "object",
            "oneOf": [
                {
                    "properties": {
                        "timepoint": {
                            "description": "The initial timepoint shown in the viewer.",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "required": ["timepoint"],
                    "additionalProperties": false
                },
                {
                    "properties": {
                        "affine": {
                            "description": "Affine transformation applied by the viewer.",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 12,
                            "maxItems": 12
                        },
                        "timepoint": {
                            "description": "The initial timepoint shown in the viewer.",
                            "type": "integer",
                            "minimum": 0
                        }
                },
                "required": ["affine"],
                "additionalProperties": false
                },
                {
                    "properties": {
                        "normalizedAffine": {
                            "description": "Normalized affine transformation applied by the viewer.",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 12,
                            "maxItems": 12
                        },
                        "timepoint": {
                            "description": "The initial timepoint shown in the viewer.",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "required": ["normalizedAffine"],
                    "additionalProperties": false
                },
                {
                    "properties": {
                        "position": {
                            "description": "Position that will be centered in the viewer.",
                            "type": "array",
                            "items": {
                                "type": "number",
                                "minimum": 0
                            },
                            "minItems": 3,
                            "maxItems": 3
                        },
                        "timepoint": {
                            "description": "The initial timepoint shown in the viewer.",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "required": ["position"],
                    "additionalProperties": false
                }
            ]
        }
    },
    "required": ["isExclusive", "uiSelectionGroup"],
    "additionalProperties": false
}
